#!/usr/bin/env ruby
$LOAD_PATH.unshift File.join(File.dirname(__FILE__), *%w(.. lib))
require 'Share_learning'

def command_valid?(query)
  %w(title description).include?(query)
end

def help
  puts "USAGE: coursera [command] [keyword]\n\n"\
       "[command] now includes [title], [description].\n"\
       " - \n"\
       " - [title]\t\t"\
       'helps you search courses on Coursea with titles'\
       " containing the [keyword] you give.\n"\
       " - \n"\
       " - [description]\t"\
       'helps you search courses on Coursea with descriptions '\
       "containing the [keyword] you give.\n"
end

def reject
  help
  exit(1)
end

def show_course(course, sequence_number)
  puts "Course #{sequence_number}:\n"\
       "\tTitle: #{course[:course_name]}\n"\
       "\tType: #{course[:course_type]}\n"\
       "\tSlug: #{course[:course_slug]}\n"\
       "\tLink: #{course[:link]}\n"\
       "\n"
end

def execute_command(command, keyword)
  case command
  when 'title'
    method = :course_name
  when 'description'
    method = :description
  end
  reject unless keyword
  # search_courses(search_method, keyword)
  results = Coursera::CourseraCourses.find.search_courses(method, keyword)
  results.size.times { |i| show_course(results[i], i + 1) }
end

command = ARGV[0]
keyword = ARGV[1]
keyword = keyword.downcase if keyword

reject unless command_valid?(command)

execute_command(command, keyword)
